{"version":3,"file":"cdn.js","sources":["../src/utils/submitter-polyfill.js","../src/index.js","../src/utils/request.js","../builds/cdn.js"],"sourcesContent":["/*\n * SubmitEvent API Submitter Polyfill\n * https://stackoverflow.com/a/61110260\n */\n\n!function(){\n  var lastBtn = null\n  document.addEventListener('click',function(e){\n      if (!e.target.closest) return;\n      lastBtn = e.target.closest('button, input[type=submit]');\n  }, true);\n  document.addEventListener('submit',function(e){\n      if ('submitter' in e) return;\n      var canditates = [document.activeElement, lastBtn];\n      lastBtn = null;\n      for (var i=0; i < canditates.length; i++) {\n          var candidate = canditates[i];\n          if (!candidate) continue;\n          if (!candidate.form) continue;\n          if (!candidate.matches('button, input[type=button], input[type=image]')) continue;\n          e.submitter = candidate;\n          return;\n      }\n      e.submitter = e.target.querySelector('button, input[type=button], input[type=image]')\n  }, true);\n}();\n","import { request } from './utils/request'\nimport './utils/submitter-polyfill'\n\nexport default function (Alpine) {\n  Alpine.addRootSelector(() => '[x-ajax]')\n\n  Alpine.directive('ajax', (el, values, { cleanup }) => {\n    let listeners = (['click', 'submit']).map(event => listenForAjaxEvent(el, event))\n\n    cleanup(() => {\n      listeners.forEach(remove => remove())\n    })\n  })\n}\n\nfunction listenForAjaxEvent(el, name) {\n  let handler = event => {\n    let source = getSourceElement(event.target, name)\n    if (! isValidSourceElement(source)) return\n    event.stopPropagation()\n    event.preventDefault()\n    let ids = el.getAttribute('x-ajax')\n    ids = ids ? ids.split(',') : [el.id]\n    let targets = ids.map(id => {\n      let element = document.getElementById(id)\n      if (! element) {\n        throw Error('Target with ID `' + id + '` not found.')\n      }\n\n      return element\n    })\n\n    makeAjaxRequest(source, targets, event)\n  }\n\n  el.addEventListener(name, handler)\n\n  return () => {\n    el.removeEventListener(name, handler)\n  }\n}\n\nfunction getSourceElement(trigger, event) {\n  let validTag = {\n    submit: 'FORM',\n    click: 'A',\n  }\n\n  return trigger.closest(validTag[event])\n}\n\nfunction isValidSourceElement(el) {\n  if (! el) return false\n  let root = el.closest('[x-ajax],[ajax-ignore]')\n  if (root.hasAttribute('ajax-ignore')) return false\n  return el.tagName === 'FORM' ? true : isLocalLink(el);\n}\n\nasync function makeAjaxRequest(el, targets, event) {\n  if (el.hasAttribute('ajax-confirm') && !confirm(el.getAttribute('ajax-confirm'))) return;\n\n  dispatch(el, 'ajax:before')\n\n  try {\n    let fragment = await requestFragment(requestOptions(el, event))\n    targets.forEach(target => target.replaceWith(fragment?.getElementById(target.id) ?? ''))\n    dispatch(el, 'ajax:success')\n  } catch (error) {\n    dispatch(el, 'ajax:error', error)\n  }\n\n  dispatch(el, 'ajax:after')\n}\n\nfunction dispatch(el, name, detail = {}) {\n  el.dispatchEvent(\n      new CustomEvent(name, {\n          detail,\n          bubbles: true,\n          composed: true,\n          cancelable: true,\n      })\n  )\n}\n\nfunction requestOptions(el, event) {\n  let defaults = {\n    action: window.location.href,\n    method: 'GET',\n  }\n\n  let data = el.tagName === 'FORM' ? new FormData(el) : new FormData()\n  if (event.submitter?.name) {\n    data.append(event.submitter.name, event.submitter.value)\n  }\n\n  return {\n    data,\n    action: el.getAttribute(isLocalLink(el) ? 'href' : 'action') || defaults.action,\n    method: (el.getAttribute('method') || defaults.method).toUpperCase(),\n  }\n}\n\nfunction isLocalLink(el) {\n  return el.tagName === 'A' &&\n    location.hostname === el.hostname &&\n    el.getAttribute('href') &&\n    el.getAttribute('href').indexOf(\"#\") !== 0\n}\n\nasync function requestFragment(options) {\n  let response = ''\n  try {\n    response = await request(options.method, options.action, options.data, options)\n  } catch (response) {\n    throw Error(response.xhr.statusText)\n  }\n\n  return htmlToFragment(response)\n}\n\nfunction htmlToFragment(html) {\n  return document.createRange().createContextualFragment(html);\n}\n","export function request(method, url, data, options) {\n\n  if (method === 'GET') {\n    let params = Array.from(data.entries())\n      .filter(([key, value]) => value !== '' || value !== null)\n    if (params.length) {\n      let splitUrl = url.split('#')\n      let anchor = splitUrl[1]\n      url = splitUrl[0]\n      if (url.includes('?')) {\n          url += '?'\n      } else {\n          url += '&'\n      }\n      url += new URLSearchParams(params)\n      if (anchor) {\n          url += '#' + anchor\n      }\n    }\n    data = null\n  }\n\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest()\n    xhr.open(method, url)\n    xhr.overrideMimeType('text/html')\n\n    let headers = Object.assign({\n      'X-Alpine-Request': 'true',\n    }, options.headers)\n\n    for (const [key, value] of Object.entries(headers)) {\n      xhr.setRequestHeader(key, value)\n    }\n\n    if (options.progress && xhr.upload) {\n      xhr.upload.addEventListener('progress', options.progress)\n    }\n\n    let info = { xhr, url, data, options }\n\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 400) return resolve(xhr.response)\n\n      reject(info)\n    }\n\n    xhr.onerror = function () {\n      reject(info)\n    }\n\n    xhr.send(data)\n  })\n}\n","import ajax from '../src/index'\n\ndocument.addEventListener('alpine:initializing', () => {\n    ajax(window.Alpine)\n})\n"],"names":["lastBtn","Alpine","addRootSelector","directive","el","values","cleanup","listeners","map","event","name","handler","source","trigger","validTag","submit","click","closest","getSourceElement","target","hasAttribute","tagName","isLocalLink","isValidSourceElement","stopPropagation","preventDefault","ids","getAttribute","split","id","async","targets","confirm","dispatch","fragment","options","response","method","url","data","params","Array","from","entries","filter","key","value","length","splitUrl","anchor","includes","URLSearchParams","Promise","resolve","reject","xhr","XMLHttpRequest","open","overrideMimeType","headers","Object","assign","setRequestHeader","progress","upload","addEventListener","info","onload","this","status","onerror","send","request","action","Error","statusText","html","document","createRange","createContextualFragment","requestFragment","defaults","window","location","href","FormData","submitter","_event$submitter","append","toUpperCase","requestOptions","forEach","replaceWith","getElementById","error","makeAjaxRequest","element","removeEventListener","listenForAjaxEvent","remove","detail","dispatchEvent","CustomEvent","bubbles","composed","cancelable","hostname","indexOf","e","canditates","activeElement","i","candidate","form","matches","querySelector","ajax"],"mappings":"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"}